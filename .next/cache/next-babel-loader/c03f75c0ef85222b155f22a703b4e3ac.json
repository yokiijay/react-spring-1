{"ast":null,"code":"var _jsxFileName = \"/Users/yokiijay/Desktop/react-spring-1/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { animated, useSpring, interpolate, config } from 'react-spring';\nimport { size } from 'polished';\nimport CenterLayout from '../components/CenterLayout';\nimport { useRef } from 'react';\nimport transform from '../libs/transform';\nexport default function Index() {\n  const [{\n    rotateX,\n    rotateY,\n    scale\n  }, setSpring] = useSpring(() => ({\n    config: config.gentle,\n    rotateX: 0,\n    rotateY: 0,\n    scale: 1\n  }));\n  const cardInfo = useRef({\n    pointXInCard: 0,\n    pointYInCard: 0\n  }).current;\n\n  const handleMouseMove = ev => {\n    const {\n      target,\n      clientX,\n      clientY\n    } = ev;\n    const {\n      top,\n      left,\n      width,\n      height,\n      bottom,\n      right\n    } = target.getBoundingClientRect();\n    setSpring({\n      rotateX: transform(clientY, [top, bottom], [15, -15]),\n      rotateY: transform(clientX, [left, right], [-15, 15]),\n      scale: 1.1\n    });\n  };\n\n  return jsx(CenterLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, jsx(AnimatedCard, {\n    onMouseMove: handleMouseMove,\n    onMouseOut: () => setSpring({\n      rotateX: 0,\n      rotateY: 0,\n      scale: 1\n    }),\n    style: {\n      transform: interpolate([rotateX, rotateY, scale], (x, y, s) => `perspective(1000px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, jsx(\"img\", {\n    src: \"https://images.pexels.com/photos/3558597/pexels-photo-3558597.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })));\n}\nconst AnimatedCard = styled(animated.div)`\n  ${size(400)};\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n  /* transform: perspective(600px) rotateX(-30deg) rotateY(-30deg); */\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;","map":{"version":3,"sources":["/Users/yokiijay/Desktop/react-spring-1/pages/index.js"],"names":["jsx","css","styled","animated","useSpring","interpolate","config","size","CenterLayout","useRef","transform","Index","rotateX","rotateY","scale","setSpring","gentle","cardInfo","pointXInCard","pointYInCard","current","handleMouseMove","ev","target","clientX","clientY","top","left","width","height","bottom","right","getBoundingClientRect","x","y","s","AnimatedCard","div"],"mappings":";;;;AAAA;AACA,SAASA,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,EAA2CC,MAA3C,QAAyD,cAAzD;AACA,SAASC,IAAT,QAAqB,UAArB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM,CAAC;AAACC,IAAAA,OAAD;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,GAAD,EAA4BC,SAA5B,IAAyCX,SAAS,CAAC,OAAO;AAC9DE,IAAAA,MAAM,EAAEA,MAAM,CAACU,MAD+C;AAE9DJ,IAAAA,OAAO,EAAE,CAFqD;AAG9DC,IAAAA,OAAO,EAAE,CAHqD;AAI9DC,IAAAA,KAAK,EAAE;AAJuD,GAAP,CAAD,CAAxD;AAOA,QAAMG,QAAQ,GAAGR,MAAM,CAAC;AACtBS,IAAAA,YAAY,EAAE,CADQ;AAEtBC,IAAAA,YAAY,EAAE;AAFQ,GAAD,CAAN,CAGdC,OAHH;;AAKA,QAAMC,eAAe,GAAIC,EAAD,IAAM;AAC5B,UAAM;AAAEC,MAAAA,MAAF;AAAUC,MAAAA,OAAV;AAAmBC,MAAAA;AAAnB,QAA+BH,EAArC;AACA,UAAM;AAAEI,MAAAA,GAAF;AAAMC,MAAAA,IAAN;AAAWC,MAAAA,KAAX;AAAiBC,MAAAA,MAAjB;AAAwBC,MAAAA,MAAxB;AAA+BC,MAAAA;AAA/B,QAAwCR,MAAM,CAACS,qBAAP,EAA9C;AAEAjB,IAAAA,SAAS,CAAC;AACRH,MAAAA,OAAO,EAAEF,SAAS,CAACe,OAAD,EAAU,CAACC,GAAD,EAAKI,MAAL,CAAV,EAAwB,CAAC,EAAD,EAAI,CAAC,EAAL,CAAxB,CADV;AAERjB,MAAAA,OAAO,EAAEH,SAAS,CAACc,OAAD,EAAU,CAACG,IAAD,EAAMI,KAAN,CAAV,EAAwB,CAAC,CAAC,EAAF,EAAK,EAAL,CAAxB,CAFV;AAGRjB,MAAAA,KAAK,EAAE;AAHC,KAAD,CAAT;AAKD,GATD;;AAWA,SACE,IAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAC,YAAD;AACE,IAAA,WAAW,EAAEO,eADf;AAEE,IAAA,UAAU,EAAE,MAAMN,SAAS,CAAC;AAC1BH,MAAAA,OAAO,EAAE,CADiB;AAE1BC,MAAAA,OAAO,EAAE,CAFiB;AAG1BC,MAAAA,KAAK,EAAE;AAHmB,KAAD,CAF7B;AAOE,IAAA,KAAK,EAAE;AAAEJ,MAAAA,SAAS,EAAEL,WAAW,CAAC,CAACO,OAAD,EAAUC,OAAV,EAAmBC,KAAnB,CAAD,EAA4B,CAACmB,CAAD,EAAGC,CAAH,EAAKC,CAAL,KAAU,+BAA8BF,CAAE,gBAAeC,CAAE,cAAaC,CAAE,GAAtG;AAAxB,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AACE,IAAA,GAAG,EAAC,0GADN;AAEE,IAAA,GAAG,EAAC,EAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CADF;AAkBD;AAED,MAAMC,YAAY,GAAGlC,MAAM,CAACC,QAAQ,CAACkC,GAAV,CAAe;IACtC9B,IAAI,CAAC,GAAD,CAAM;;;;;;;;;;;CADd","sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { animated, useSpring, interpolate, config } from 'react-spring'\nimport { size } from 'polished'\nimport CenterLayout from '../components/CenterLayout'\nimport { useRef } from 'react'\nimport transform from '../libs/transform'\n\nexport default function Index() {\n  const [{rotateX, rotateY, scale}, setSpring] = useSpring(() => ({\n    config: config.gentle,\n    rotateX: 0,\n    rotateY: 0,\n    scale: 1\n  }))\n\n  const cardInfo = useRef({\n    pointXInCard: 0,\n    pointYInCard: 0\n  }).current\n\n  const handleMouseMove = (ev)=>{\n    const { target, clientX, clientY } = ev\n    const { top,left,width,height,bottom,right} = target.getBoundingClientRect()\n\n    setSpring({\n      rotateX: transform(clientY, [top,bottom], [15,-15]),\n      rotateY: transform(clientX, [left,right], [-15,15]),\n      scale: 1.1\n    })\n  }\n\n  return (\n    <CenterLayout>\n      <AnimatedCard\n        onMouseMove={handleMouseMove}\n        onMouseOut={() => setSpring({\n          rotateX: 0,\n          rotateY: 0,\n          scale: 1\n        })}\n        style={{ transform: interpolate([rotateX, rotateY, scale], (x,y,s)=>`perspective(1000px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`) }}\n      >\n        <img\n          src='https://images.pexels.com/photos/3558597/pexels-photo-3558597.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500'\n          alt=''\n        />\n      </AnimatedCard>\n    </CenterLayout>\n  )\n}\n\nconst AnimatedCard = styled(animated.div)`\n  ${size(400)};\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n  /* transform: perspective(600px) rotateX(-30deg) rotateY(-30deg); */\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`"]},"metadata":{},"sourceType":"module"}