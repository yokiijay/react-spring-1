{"ast":null,"code":"var _jsxFileName = \"/Users/yokiijay/Desktop/react-spring-1/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport CenterLayout from '../components/CenterLayout';\nimport Link from 'next/link';\nimport { useSpring, animated } from 'react-spring';\nimport { useState } from 'react';\nexport default function Index() {\n  const {\n    0: state,\n    1: toggle\n  } = useState(false);\n  const springA = useSpring({\n    scale: state ? 1.2 : 1,\n    from: {\n      scale: 1\n    }\n  });\n  return jsx(CenterLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, jsx(Link, {\n    href: \"/hover3d\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, jsx(AnimatedA, {\n    style: {\n      transform: `scale(${springA.scale})`\n    },\n    onMouseOver: () => toggle(!state),\n    onMouseOut: () => toggle(!state),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"hover3d\")));\n}\nconst StyledA = styled.a`\n  width: 200px;\n  height: 80px;\n  background: royalblue;\n  color: white;\n  border-radius: 10px;\n  cursor: pointer;\n  outline: none;\n  display: grid;\n  place-items: center;\n  text-transform: uppercase;\n`;\nconst AnimatedA = animated(StyledA);","map":{"version":3,"sources":["/Users/yokiijay/Desktop/react-spring-1/pages/index.js"],"names":["jsx","css","styled","CenterLayout","Link","useSpring","animated","useState","Index","state","toggle","springA","scale","from","transform","StyledA","a","AnimatedA"],"mappings":";;;;AAAA;AACA,SAASA,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAkBH,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMI,OAAO,GAAGN,SAAS,CAAC;AACxBO,IAAAA,KAAK,EAAEH,KAAK,GAAG,GAAH,GAAS,CADG;AAExBI,IAAAA,IAAI,EAAE;AACJD,MAAAA,KAAK,EAAE;AADH;AAFkB,GAAD,CAAzB;AAOA,SACE,IAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAC,SAAD;AACE,IAAA,KAAK,EAAE;AACLE,MAAAA,SAAS,EAAG,SAAQH,OAAO,CAACC,KAAM;AAD7B,KADT;AAIE,IAAA,WAAW,EAAE,MAAIF,MAAM,CAAC,CAACD,KAAF,CAJzB;AAKE,IAAA,UAAU,EAAE,MAAIC,MAAM,CAAC,CAACD,KAAF,CALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,CADF;AAeD;AAED,MAAMM,OAAO,GAAGb,MAAM,CAACc,CAAE;;;;;;;;;;;CAAzB;AAaA,MAAMC,SAAS,GAAGX,QAAQ,CAACS,OAAD,CAA1B","sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport CenterLayout from '../components/CenterLayout'\nimport Link from 'next/link'\nimport { useSpring, animated } from 'react-spring'\nimport { useState } from 'react'\n\nexport default function Index() {\n  const [state, toggle] = useState(false)\n  const springA = useSpring({\n    scale: state ? 1.2 : 1,\n    from: {\n      scale: 1\n    }\n  })\n\n  return (\n    <CenterLayout>\n      <Link href='/hover3d'>\n        <AnimatedA\n          style={{\n            transform: `scale(${springA.scale})`\n          }}\n          onMouseOver={()=>toggle(!state)}\n          onMouseOut={()=>toggle(!state)}\n        >\n          hover3d\n        </AnimatedA>\n      </Link>\n    </CenterLayout>\n  )\n}\n\nconst StyledA = styled.a`\n  width: 200px;\n  height: 80px;\n  background: royalblue;\n  color: white;\n  border-radius: 10px;\n  cursor: pointer;\n  outline: none;\n  display: grid;\n  place-items: center;\n  text-transform: uppercase;\n`\n\nconst AnimatedA = animated(StyledA)\n"]},"metadata":{},"sourceType":"module"}