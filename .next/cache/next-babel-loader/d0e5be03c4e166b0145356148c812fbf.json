{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yokiijay/Desktop/react-spring-1/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \";\\n  border-radius: 10px;\\n  overflow: hidden;\\n  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);\\n  cursor: pointer;\\n  /* transform: perspective(600px) rotateX(-30deg) rotateY(-30deg); */\\n  img {\\n    width: 100%;\\n    height: 100%;\\n    object-fit: cover;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { animated, useSpring, interpolate, config } from 'react-spring';\nimport { size } from 'polished';\nimport CenterLayout from '../components/CenterLayout';\nimport { useRef } from 'react';\nexport default function Index() {\n  var _useSpring = useSpring(function () {\n    return {\n      config: config.gentle,\n      rotateX: 0,\n      rotateY: 0\n    };\n  }),\n      _useSpring2 = _slicedToArray(_useSpring, 2),\n      spring = _useSpring2[0],\n      setSpring = _useSpring2[1];\n\n  var cardInfo = useRef({\n    pointXInCard: 0,\n    pointYInCard: 0\n  }).current;\n\n  var handleMouseOver = function handleMouseOver(ev) {\n    var target = ev.target,\n        clientX = ev.clientX,\n        clientY = ev.clientY;\n\n    var _target$getBoundingCl = target.getBoundingClientRect(),\n        top = _target$getBoundingCl.top,\n        left = _target$getBoundingCl.left,\n        width = _target$getBoundingCl.width,\n        height = _target$getBoundingCl.height;\n\n    setSpring({\n      rotateX: clientY.interpolate([clientY - top, clientY - top + height], [-30, 30]),\n      rotateY: clientX.interpolate([clientX - left, clientX - left + width], [-30, 30]),\n      scale: 1.2\n    });\n  };\n\n  return jsx(CenterLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, jsx(AnimatedCard, {\n    onMouseOver: handleMouseOver,\n    onMouseOut: function onMouseOut() {\n      return setSpring({\n        rotateX: 0,\n        rotateY: 0,\n        scale: 1\n      });\n    },\n    style: {\n      transform: \"perspective(1000px) rotateX(\".concat(spring.rotateX, \") rotateY(\").concat(spring.rotateY, \") scale(\").concat(spring.scale, \")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, jsx(\"img\", {\n    src: \"https://images.pexels.com/photos/3558597/pexels-photo-3558597.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })));\n}\nvar AnimatedCard = styled(animated.div)(_templateObject(), size(400));","map":{"version":3,"sources":["/Users/yokiijay/Desktop/react-spring-1/pages/index.js"],"names":["jsx","css","styled","animated","useSpring","interpolate","config","size","CenterLayout","useRef","Index","gentle","rotateX","rotateY","spring","setSpring","cardInfo","pointXInCard","pointYInCard","current","handleMouseOver","ev","target","clientX","clientY","getBoundingClientRect","top","left","width","height","scale","transform","AnimatedCard","div"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA,SAASA,GAAT,EAAcC,GAAd,QAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,EAA2CC,MAA3C,QAAyD,cAAzD;AACA,SAASC,IAAT,QAAqB,UAArB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,MAAT,QAAuB,OAAvB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA,mBACFN,SAAS,CAAC;AAAA,WAAO;AAC3CE,MAAAA,MAAM,EAAEA,MAAM,CAACK,MAD4B;AAE3CC,MAAAA,OAAO,EAAE,CAFkC;AAG3CC,MAAAA,OAAO,EAAE;AAHkC,KAAP;AAAA,GAAD,CADP;AAAA;AAAA,MACvBC,MADuB;AAAA,MACfC,SADe;;AAO9B,MAAMC,QAAQ,GAAGP,MAAM,CAAC;AACtBQ,IAAAA,YAAY,EAAE,CADQ;AAEtBC,IAAAA,YAAY,EAAE;AAFQ,GAAD,CAAN,CAGdC,OAHH;;AAKA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,EAAD,EAAM;AAAA,QACpBC,MADoB,GACSD,EADT,CACpBC,MADoB;AAAA,QACZC,OADY,GACSF,EADT,CACZE,OADY;AAAA,QACHC,OADG,GACSH,EADT,CACHG,OADG;;AAAA,gCAEMF,MAAM,CAACG,qBAAP,EAFN;AAAA,QAEpBC,GAFoB,yBAEpBA,GAFoB;AAAA,QAEhBC,IAFgB,yBAEhBA,IAFgB;AAAA,QAEXC,KAFW,yBAEXA,KAFW;AAAA,QAELC,MAFK,yBAELA,MAFK;;AAG5Bd,IAAAA,SAAS,CAAC;AACRH,MAAAA,OAAO,EAAEY,OAAO,CAACnB,WAAR,CAAoB,CAACmB,OAAO,GAACE,GAAT,EAAaF,OAAO,GAACE,GAAR,GAAYG,MAAzB,CAApB,EAAqD,CAAC,CAAC,EAAF,EAAK,EAAL,CAArD,CADD;AAERhB,MAAAA,OAAO,EAACU,OAAO,CAAClB,WAAR,CAAoB,CAACkB,OAAO,GAACI,IAAT,EAAeJ,OAAO,GAACI,IAAR,GAAaC,KAA5B,CAApB,EAAuD,CAAC,CAAC,EAAF,EAAK,EAAL,CAAvD,CAFA;AAGRE,MAAAA,KAAK,EAAE;AAHC,KAAD,CAAT;AAKD,GARD;;AAUA,SACE,IAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,IAAC,YAAD;AACE,IAAA,WAAW,EAAEV,eADf;AAEE,IAAA,UAAU,EAAE;AAAA,aAAML,SAAS,CAAC;AAC1BH,QAAAA,OAAO,EAAE,CADiB;AAE1BC,QAAAA,OAAO,EAAE,CAFiB;AAG1BiB,QAAAA,KAAK,EAAE;AAHmB,OAAD,CAAf;AAAA,KAFd;AAOE,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,wCAAiCjB,MAAM,CAACF,OAAxC,uBAA4DE,MAAM,CAACD,OAAnE,qBAAqFC,MAAM,CAACgB,KAA5F;AAAX,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AACE,IAAA,GAAG,EAAC,0GADN;AAEE,IAAA,GAAG,EAAC,EAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CADF;AAkBD;AAED,IAAME,YAAY,GAAG9B,MAAM,CAACC,QAAQ,CAAC8B,GAAV,CAAT,oBACd1B,IAAI,CAAC,GAAD,CADU,CAAlB","sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { animated, useSpring, interpolate, config } from 'react-spring'\nimport { size } from 'polished'\nimport CenterLayout from '../components/CenterLayout'\nimport { useRef } from 'react'\n\nexport default function Index() {\n  const [spring, setSpring] = useSpring(() => ({\n    config: config.gentle,\n    rotateX: 0,\n    rotateY: 0\n  }))\n\n  const cardInfo = useRef({\n    pointXInCard: 0,\n    pointYInCard: 0\n  }).current\n\n  const handleMouseOver = (ev)=>{\n    const { target, clientX, clientY } = ev\n    const { top,left,width,height } = target.getBoundingClientRect()\n    setSpring({\n      rotateX: clientY.interpolate([clientY-top,clientY-top+height],[-30,30]),\n      rotateY:clientX.interpolate([clientX-left, clientX-left+width],[-30,30]),\n      scale: 1.2\n    })\n  }\n\n  return (\n    <CenterLayout>\n      <AnimatedCard\n        onMouseOver={handleMouseOver}\n        onMouseOut={() => setSpring({\n          rotateX: 0,\n          rotateY: 0,\n          scale: 1\n        })}\n        style={{ transform: `perspective(1000px) rotateX(${spring.rotateX}) rotateY(${spring.rotateY}) scale(${spring.scale})` }}\n      >\n        <img\n          src='https://images.pexels.com/photos/3558597/pexels-photo-3558597.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500'\n          alt=''\n        />\n      </AnimatedCard>\n    </CenterLayout>\n  )\n}\n\nconst AnimatedCard = styled(animated.div)`\n  ${size(400)};\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n  /* transform: perspective(600px) rotateX(-30deg) rotateY(-30deg); */\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`\n"]},"metadata":{},"sourceType":"module"}