{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yokiijay/Desktop/react-spring-1/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \";\\n  border-radius: 10px;\\n  overflow: hidden;\\n  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);\\n  cursor: pointer;\\n  /* transform: perspective(600px) rotateX(-30deg) rotateY(-30deg); */\\n  img {\\n    width: 100%;\\n    height: 100%;\\n    object-fit: cover;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/** @jsx jsx */\nimport { jsx, css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport { animated, useSpring, interpolate, config } from 'react-spring';\nimport { size } from 'polished';\nimport CenterLayout from '../components/CenterLayout';\nimport { useRef } from 'react';\nimport transform from '../libs/transform';\nexport default function Index() {\n  var _useSpring = useSpring(function () {\n    return {\n      config: config.gentle,\n      rotateX: 0,\n      rotateY: 0,\n      scale: 1\n    };\n  }),\n      _useSpring2 = _slicedToArray(_useSpring, 2),\n      _useSpring2$ = _useSpring2[0],\n      rotateX = _useSpring2$.rotateX,\n      rotateY = _useSpring2$.rotateY,\n      scale = _useSpring2$.scale,\n      setSpring = _useSpring2[1];\n\n  var cardInfo = useRef({\n    pointXInCard: 0,\n    pointYInCard: 0\n  }).current;\n\n  var handleMouseOver = function handleMouseOver(ev) {\n    var target = ev.target,\n        clientX = ev.clientX,\n        clientY = ev.clientY;\n\n    var _target$getBoundingCl = target.getBoundingClientRect(),\n        top = _target$getBoundingCl.top,\n        left = _target$getBoundingCl.left,\n        width = _target$getBoundingCl.width,\n        height = _target$getBoundingCl.height;\n\n    console.log(transform(clientY, [clientY - top, clientY - top + height], [-30, 30]));\n    setSpring({\n      rotateX: transform(clientY, [clientY - top, clientY - top + height], [-30, 30]),\n      rotateY: transform(clientX, [clientX - left, clientX - left + width], [-30, 30]),\n      scale: 1.2\n    });\n  };\n\n  return jsx(CenterLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, jsx(AnimatedCard, {\n    onMouseOver: handleMouseOver,\n    onMouseOut: function onMouseOut() {\n      return setSpring({\n        rotateX: 0,\n        rotateY: 0,\n        scale: 1\n      });\n    },\n    style: {\n      transform: interpolate([rotateX, rotateY, scale], function (x, y, s) {\n        return \"perspective(1000px) rotateX(\".concat(x, \"deg) rotateY(\").concat(y, \"deg) scale(\").concat(s, \")\");\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, jsx(\"img\", {\n    src: \"https://images.pexels.com/photos/3558597/pexels-photo-3558597.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\",\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })));\n}\nvar AnimatedCard = styled(animated.div)(_templateObject(), size(400));","map":{"version":3,"sources":["/Users/yokiijay/Desktop/react-spring-1/pages/index.js"],"names":["jsx","css","styled","animated","useSpring","interpolate","config","size","CenterLayout","useRef","transform","Index","gentle","rotateX","rotateY","scale","setSpring","cardInfo","pointXInCard","pointYInCard","current","handleMouseOver","ev","target","clientX","clientY","getBoundingClientRect","top","left","width","height","console","log","x","y","s","AnimatedCard","div"],"mappings":"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","sourcesContent":["/** @jsx jsx */\nimport { jsx, css } from '@emotion/core'\nimport styled from '@emotion/styled'\nimport { animated, useSpring, interpolate, config } from 'react-spring'\nimport { size } from 'polished'\nimport CenterLayout from '../components/CenterLayout'\nimport { useRef } from 'react'\nimport transform from '../libs/transform'\n\nexport default function Index() {\n  const [{rotateX, rotateY, scale}, setSpring] = useSpring(() => ({\n    config: config.gentle,\n    rotateX: 0,\n    rotateY: 0,\n    scale: 1\n  }))\n\n  const cardInfo = useRef({\n    pointXInCard: 0,\n    pointYInCard: 0\n  }).current\n\n  const handleMouseOver = (ev)=>{\n    const { target, clientX, clientY } = ev\n    const { top,left,width,height } = target.getBoundingClientRect()\n    console.log( transform(clientY, [clientY-top,clientY-top+height], [-30,30]) )\n    setSpring({\n      rotateX: transform(clientY, [clientY-top,clientY-top+height], [-30,30]),\n      rotateY: transform(clientX, [clientX-left, clientX-left+width], [-30,30]),\n      scale: 1.2\n    })\n  }\n\n  return (\n    <CenterLayout>\n      <AnimatedCard\n        onMouseOver={handleMouseOver}\n        onMouseOut={() => setSpring({\n          rotateX: 0,\n          rotateY: 0,\n          scale: 1\n        })}\n        style={{ transform: interpolate([rotateX, rotateY, scale], (x,y,s)=>`perspective(1000px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`) }}\n      >\n        <img\n          src='https://images.pexels.com/photos/3558597/pexels-photo-3558597.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500'\n          alt=''\n        />\n      </AnimatedCard>\n    </CenterLayout>\n  )\n}\n\nconst AnimatedCard = styled(animated.div)`\n  ${size(400)};\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n  /* transform: perspective(600px) rotateX(-30deg) rotateY(-30deg); */\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`"]},"metadata":{},"sourceType":"module"}